# include <iostream>
# include <fstream>
# include <cstdlib>

using namespace std;

// Funcion para retornar el numero de mes que necesita el usuario
int Submenu ()
{
	int month;
	cout << "\n******************\n";
	cout << "1  - Enero" << endl;
	cout << "2  - Febrero" << endl;
	cout << "3  - Marzo" << endl;
	cout << "4  - Abril" << endl;
	cout << "5  - Mayo" << endl;
	cout << "6  - Junio" << endl;
	cout << "7  - Julio" << endl;
	cout << "8  - Agosto" << endl;
	cout << "9  - Septiembre" << endl;
	cout << "10 - Octubre" << endl;
	cout << "11 - Noviembre" << endl;
	cout << "12 - Diciembre" << endl;
	cout << "\n******************\n";
	cout << "\n\tIngrese el numero del mes\n\t\t";
	cin >> month;
	return month;
}

// Funcion para retornar nombre del mes segun el numero que ingrese el usuario en funcion 1, 5 y 6
string Months(int month)
{
	string show;
	switch (month)
	{
		case 1:
			show = "Enero";
			break;
		case 2:
			show = "Febrero";
			break;
		case 3:
			show = "Marzo";
			break;
		case 4:
			show = "Abril";
			break;
		case 5:
			show = "Mayo";
			break;
		case 6:
			show = "Junio";
			break;
		case 7:
			show = "Julio";
			break;
		case 8:
			show = "Agosto";
			break;
		case 9:
			show = "Septiembre";
			break;
		case 10:
			show = "Octubre";
			break;
		case 11:
			show = "Noviembre";
			break;
		case 12:
			show = "Diciembre";
			break;
	}
	return (show);
}

int main ()
{
	/*
	A cuenta las lineas que tiene el archivo
	I, J, K son contadores para guardar en la matriz Amount, y el vector Head
	MN guarda el numero del menu principara para ejecutar la funcion solicita
	SMN guarda el numero del submenu para elegir el mes en la funcion 1, 5 y 6
	Month almacena el numero del mes
	Start es un booleano que si es 1 es porque abrio el archivo y 0 sino lo logro abrir
	Line almacena lineas completas del archivo con un while
	Temp es donde se concatenan los caracteres para parcer los |
	Rows es donde se almacenan las lineas para ser contadas
	Temp2 almacena los double que fueron convertidos despues de ser strings en Temp
	Show Guarda el nombre del mes
	Path es donde se almacena el nombre del archivo a utilizar
	REP si es S o s se vuelve a ejecutar el programa
	Cell almacena el valor de cada campo 
	Ans se almacena una respuesta
	AnsT se almacena otra respuesta como auxiliar de Ans
	*/
	int A = 0, I = 0, J = -15, K = 0, MN, SMN, Month, Start = 0;
	string Line, Temp = "", Rows, Temp2, Show, Path;
	char REP = 'z';
	double Cell, Ans, AnsT;
	
	// El do while se ejecuta hasta que logra abrir el archivo
	do
	{
		cout << "Ingrese el nombre del archivo" << endl;
		cin >> Path;
		ifstream Y;
		Y.open(Path.c_str());
		if (Y.good())
		{
			// Cuenta la cantidad de lineas del archivo
			while (getline (Y,Rows))
			{
				A++;
			}
			Start = 1;
			Y.close();
		}
		
		// Este mensaje se muestra sino logra abrir el archivo
		else
		{
			cout << "No se logro abrir el archivo" << endl;
			cout << "\n* Verifique que el nombre incluya la extension del archivo y que la ubicacion del archivo sean correctos\n\n\n\n\n\n\n\n\t\t";
			system("pause");
			system("cls");
		}
		
		// Si el archivo se logra abrir comieza a ejecutar los calculos segun el archivo
		if (Start == 1)
		{
			// Un vector donde se almacenan los nombres de los productos
			string Head[A - 1];
			// Matriz donde se almacenan los datos numericos del archivo
			double Amount[A-1][12];
			// Se vuelve abrir el archivo
			ifstream File;
			File.open(Path.c_str());
			// Si el archivo se puede abrir comienza a guardar los datos en la matriz Amount
    		if (File.good())
	    	{
	    		// Verifica los | y fines de linea
		        while (getline(File, Line, '|') || getline(File, Line, '\0'))
				{
					if (I > 12)
					{
						// Concatena los numeros a la variable Temp en forma de string
						for (int a = 0; a < Line.length(); a++)
						{
							if (Line[a] != ',')
								Temp += Line[a];
						}
						// Convierte los numeros que estan en la variable Temp tipo string a tipo float
						Cell = strtod((Temp).c_str(),0);
						Temp2 = Temp;
						// Vacia Temp para la proxima vez que se vuelve a encontrar un |
						Temp = "";
						// Suma el contador de las filas
						if (J == 12)
						{
							J = -1;
							K++;
						}
						// Almacena el nombre del producto en el vector Head
						if (J == -1)
						{
							Head[K] = Temp2;
							//cout << A - 1 << "|" << K << "|" << Temp2 << endl;
						}
						// Llena la matriz Amount con los numeros con decimales
						if (J >= 0)
						{
							Amount[K][J] = Cell;
							//cout << K << "|" << J << "|" << Temp2 << endl;
						}	
					}
					I++;	
					J++;
				}
				// Cierra el archivo
				File.close();
				/*for (int a = 0; a < (A - 1); a++)
				{
					for (int e = 0; e < 12; e++)
					{
						// fixed hace que los float se muestren como decimales y no en notacion cientifica
						cout << fixed << Amount[a][e]<< "\t";
					}
					cout << endl;
				}*/
				// El do while es por si el usuario no ingresa un numero valido, asi se repite hasta ingresar un numero del listado	
				do
				{
					cout << "\n======================================================\n\n";
					cout << "1 -  Total de ventas por mes" << endl;
					cout << "2 -  Total de ventas por producto" << endl;
					cout << "3 -  Producto mas vendido en todos los meses" << endl;
					cout << "4 -  Producto menos vendido en todos los mes" << endl;
					cout << "5 -  Producto mas vendio en un mes" << endl;
					cout << "6 -  Producto  menos vendido en un mes" << endl;
					cout << "7 -  Mes con mas ventas" << endl;
					cout << "8 -  Mes con menos ventas" << endl;
					cout << "9 -  Promedio de ventas por mes" << endl;
					cout << "10 - Promedio de ventas en todos los meses" << endl;
					cout << "======================================================\n\n";
					cout << "\t Ingrese un numero para elegir una opcion del menu\n\t\t";
					cin >> MN;
					// El switch hace que ejecuta los calculos para brindar la informacion que el usuario solicita con las opciones de 1 a 10
					switch (MN)
					{
						// Muestra las ventas del mes que solicita el usuario
						case 1:
							do
							{
								Ans = 0;
								Month = Submenu();
								if (Month < 1 || Month > 12)
									cout << "El numero " << Month << " ingresado no se encuentra en el rango de 1 - 12 \n\t Intenta Nuevamente"  << endl;
							}
							while (Month < 1 || Month > 12);
							Show = Months(Month);
							for (int a = 0; a < (A - 1); a++)
							{
								Ans += Amount[a][Month -1];
							}
							printf("\tLas ventas de mes %s son %.2f \n\n\n\n\n\n\t\t", Show.c_str(), Ans, 2);
							system("pause");
							break;
						// Muestra el total de ventas por producto
						case 2:
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < (A - 1); a++)
							{
								for (int e = 0; e < 12; e++)
								{
									Ans += Amount[a][e];
								}
								cout << "\t";
								printf("Se han vendido %.2f del producto: %s \n", Ans, Head[a].c_str());
								Ans = 0;
							}
							cout << "\n\n\n\n\n\n\t\t";
							system("pause");
							break;
						// Muestra el producto mas vendido
						case 3:
							int C3;
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < (A - 1); a++)
							{
								for (int e = 0; e < 12; e++)
								{
									Ans += Amount[a][e];
								}
								if (Ans > AnsT)
								{
									AnsT = Ans;
									C3 = a;
								}
								Ans = 0;
							}
							printf ("\tEl producto mas vendido es: %s con %.2f productos vendidos\n\n\n\n\n\n\t\t", Head[C3].c_str(), AnsT);
							system("pause");
							break;
						// Muestra el producto menos vendido
						case 4:
							int C4;
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < (A - 1); a++)
							{
								for (int e = 0; e < 12; e++)
								{
									Ans += Amount[a][e];
								}
								if (AnsT == 0 && Ans == 0)
								{
									AnsT = Ans;
									C4 = a;
								}
								if (AnsT > Ans)
								{
									AnsT = Ans;
									C4 = a;
								}
								Ans = 0;
							}
							printf("\tEl producto menos vendido es: %s con %.2f productos vendidos\n\n\n\n\n\n\t\t", Head[C4].c_str(), AnsT);
							system("pause");
							break;
						// Muestra el producto mas vendido en el mes solicitado
						case 5:
							int C5;
							do
							{
								Ans = 0;
								Month = Submenu();
								if (Month < 1 || Month > 12)
									cout << "El numero " << Month << " ingresado no se encuentra en el rango de 1 - 12 \n\t Intenta Nuevamente"  << endl;
							}
							while (Month < 1 || Month > 12);
							Show = Months(Month);
							for (int a = 0; a < (A - 1); a++)
							{
								if (Ans < Amount[a][Month -1])
								{
									Ans = Amount[a][Month -1];
									C5 = a;
								}
							}
							printf("\tEl producto mas vendido en el mes de %s es %s con %.2f productos vendidos\n\n\n\n\n\n\t\t", Show.c_str(), Head[C5].c_str(), Ans);
							system("pause");
							break;
						// Muestra el mes menos vendido en el mes solicitado
						case 6:
							int C6;
							do
							{
								Ans = 0;
								AnsT = 0;
								Month = Submenu();
								if (Month < 1 || Month > 12)
									cout << "El numero " << Month << " ingresado no se encuentra en el rango de 1 - 12 \n\t Intenta Nuevamente"  << endl;
							}
							while (Month < 1 || Month > 12);
							Show = Months(Month);
							for (int a = 0; a < (A - 1); a++)
							{
								Ans = Amount[a][Month -1];
								if (AnsT == 0 && Ans == 0)
								{
									AnsT = Ans;
									C6 = a;
								}
								if (Ans < AnsT)
								{
									AnsT = Ans;
									C6 = a;
								}
							}
							printf ("\tEl producto menos vendido en el mes de %s es %s con %.2f productos vendidos\n\n\n\n\n\n\t\t", Show.c_str(), Head[C6].c_str(), AnsT);
							system("pause");
							break;
						// Muestra el mes con mas ventas
						case 7:
							int C7;
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < 12; a++)
							{
								for ( int e = 0; e < (A - 1); e++)
								{
									Ans += Amount[e][a];
								}
								if (AnsT < Ans)
								{
									AnsT = Ans;
									C7 = a;
								}
								Ans = 0;
							}
							Show = Months(C7 + 1);
							printf("\tEl mes con mas ventas a sido %s con %.2f\n\n\n\n\n\n\t\t", Show.c_str(), AnsT);
							system("pause");
							break;
						// Muestra el mes con menos ventas
						case 8:
							int C8;
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < 12; a++)
							{
								for ( int e = 0; e < (A - 1); e++)
								{
									Ans += Amount[e][a];
								}
								if (AnsT == 0 && Ans == 0)
								{
									AnsT = Ans;
									C8 = a;
								}	
								if (AnsT > Ans)
								{
									AnsT = Ans;
									C7 = a;
								}
								Ans = 0;
							}
							Show = Months(C7 + 1);
							printf ("\tEl mes con menos ventas a sido %s con %.2f\n\n\n\n\n\n\t\t", Show.c_str(), AnsT);
							system("pause");
							break;
						// Muestra el promedio de ventas por mes
						case 9:
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < 12; a++)
							{
								for ( int e = 0; e < (A - 1); e++)
								{
									Ans += Amount[e][a];
								}
								AnsT = Ans;
								Ans = 0;
								Show = Months(a + 1);
								printf("\tEl promedio de %s es %.2f\n", Show.c_str(), (AnsT / (A - 1)));
							}
							cout << "\n\n\n\n\n\n\t\t";
							system("pause");
							break;
						// Muestra el promedio total de ventas
						case 10:
							Ans = 0;
							AnsT = 0;
							for (int a = 0; a < 12; a++)
							{
								for ( int e = 0; e < (A - 1); e++)
								{
									Ans += Amount[e][a];
									AnsT++;
								}
							}	
							printf("\tEl promedio total es %.2f\n\n\n\n\n\n\t\t", (Ans / (AnsT)));
							system("pause");
							break;
						// Muestra este mensaje en caso de no ingresar un numero del 1 al 10
						default:
							system("cls");
							cout << "El numero ingresado no se encuentra en el rango de 1 - 10" << "\n\n\n\n\n\n\t\t";
							system("pause");
							break;
					}	
				// Pregunta si quieren ejecutar nuevamente el programa
				system("cls");
				cout << "Para ejecutar nuevamente el programa ingrese \"S\"" << endl;
				cin >> REP;
				system("pause");
				}
				while (REP == 's' || REP == 'S');
				system("cls");
				cout << "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\tWritten by\n\t\t\t\t***********\n\t\t\t\tLuis Ortega\n\t\t\t\t7690-17-360\n";
				cout << "\t\t\t\tMario Field\n\t\t\t       7690-17-20612\n\n";
				system("pause");
			}
		}
	}
	while (Start == 0);
    return 0;
}
